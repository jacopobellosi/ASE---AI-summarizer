from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ParaphraseResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, paraphrased_text=None):  # noqa: E501
        """ParaphraseResponse - a model defined in OpenAPI

        :param paraphrased_text: The paraphrased_text of this ParaphraseResponse.  # noqa: E501
        :type paraphrased_text: str
        """
        self.openapi_types = {
            'paraphrased_text': str
        }

        self.attribute_map = {
            'paraphrased_text': 'paraphrasedText'
        }

        self._paraphrased_text = paraphrased_text

    @classmethod
    def from_dict(cls, dikt) -> 'ParaphraseResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ParaphraseResponse of this ParaphraseResponse.  # noqa: E501
        :rtype: ParaphraseResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def paraphrased_text(self) -> str:
        """Gets the paraphrased_text of this ParaphraseResponse.


        :return: The paraphrased_text of this ParaphraseResponse.
        :rtype: str
        """
        return self._paraphrased_text

    @paraphrased_text.setter
    def paraphrased_text(self, paraphrased_text: str):
        """Sets the paraphrased_text of this ParaphraseResponse.


        :param paraphrased_text: The paraphrased_text of this ParaphraseResponse.
        :type paraphrased_text: str
        """
        if paraphrased_text is None:
            raise ValueError("Invalid value for `paraphrased_text`, must not be `None`")  # noqa: E501

        self._paraphrased_text = paraphrased_text
