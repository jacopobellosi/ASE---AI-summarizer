from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GenerateTestPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_text=None):  # noqa: E501
        """GenerateTestPostRequest - a model defined in OpenAPI

        :param resource_text: The resource_text of this GenerateTestPostRequest.  # noqa: E501
        :type resource_text: str
        """
        self.openapi_types = {
            'resource_text': str
        }

        self.attribute_map = {
            'resource_text': 'resource_text'
        }

        self._resource_text = resource_text

    @classmethod
    def from_dict(cls, dikt) -> 'GenerateTestPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _generate_test_post_request of this GenerateTestPostRequest.  # noqa: E501
        :rtype: GenerateTestPostRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_text(self) -> str:
        """Gets the resource_text of this GenerateTestPostRequest.


        :return: The resource_text of this GenerateTestPostRequest.
        :rtype: str
        """
        return self._resource_text

    @resource_text.setter
    def resource_text(self, resource_text: str):
        """Sets the resource_text of this GenerateTestPostRequest.


        :param resource_text: The resource_text of this GenerateTestPostRequest.
        :type resource_text: str
        """
        if resource_text is None:
            raise ValueError("Invalid value for `resource_text`, must not be `None`")  # noqa: E501

        self._resource_text = resource_text
